{"version":3,"sources":["components/CardMessage.js","firebase.js","App.js","index.js"],"names":["CardMessage","forwardRef","ref","myMessage","username","className","Card","CardContent","Typography","gutterBottom","message","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","App","useState","setMessage","convo","setConvo","userData","setUserData","updateChat","event","a","preventDefault","console","log","collection","add","timestamp","FieldValue","serverTimestamp","useEffect","prompt","orderBy","onSnapshot","snapshot","docs","map","doc","data","id","class","FormControl","Input","value","placeholder","onChange","target","IconButton","type","onClick","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAqBeA,EAfKC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,UAAUC,EAAkB,EAAlBA,SACvC,OACE,qBAAKF,IAAKA,EAAKG,UAAU,SAAzB,SACC,cAACC,EAAA,EAAD,CAAMD,UAAWD,IAAWD,EAAUC,SAAW,SAAW,YAA5D,SACC,cAACG,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYH,UAAU,OAAOI,cAAY,EAAzC,YACKL,IAAWD,EAAUC,WAAvB,UAAuCD,EAAUC,SAAjD,MADH,KACoED,EAAUO,oB,QCIlFC,EAVcC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,8CACZC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,cACnBC,MAAO,6CAIcC,Y,iBCkERC,MAzEf,WACC,MAA6BC,mBAAS,IAAtC,mBAAOZ,EAAP,KAAea,EAAf,KACA,EAAyBD,mBAAS,IAAlC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA+BH,mBAAS,IAAxC,mBAAOI,EAAP,KAAgBC,EAAhB,KAIOC,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAME,iBACNN,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAACd,UAAQN,SAAUsB,MACtCM,QAAQC,IAAIT,GACZD,EAAW,IACXZ,EAAGuB,WAAW,YAAYC,IAAI,CAC5BzB,UACAN,SAAWsB,EACXU,UAAYxB,IAASQ,UAAUiB,WAAWC,oBARzB,2CAAH,sDA2BhB,OAdFC,qBAAU,WACR,IAAMnC,EAAWoC,OAAO,uBACxBb,EAAYvB,GACbO,EAAGuB,WAAW,YACbO,QAAQ,YAAY,QACpBC,YAAW,SAAAC,GACZlB,EAASkB,EAASC,KAAKC,KAAI,SAAAC,GACzB,MAAO,CACNpC,QAAUoC,EAAIC,OACdC,GAAKF,EAAIE,aAIX,IAEE,qCACA,sBAAKA,GAAG,kBAAR,UACA,qBAAKC,MAAM,cACX,qBAAKA,MAAM,cACX,qBAAKA,MAAM,cACX,qBAAKA,MAAM,cACX,qBAAKA,MAAM,cACX,qBAAKA,MAAM,cACX,qBAAKA,MAAM,cACX,qBAAKA,MAAM,cACX,qBAAKA,MAAM,cACX,qBAAKA,MAAM,kBAEX,sBAAM5C,UAAU,cAAhB,SACF,eAAC6C,EAAA,EAAD,CAAa7C,UAAU,eAAvB,UACA,cAAC8C,EAAA,EAAD,CAAO9C,UAAU,QAAQ+C,MAAO1C,EAAS2C,YAAY,iCAAiCC,SAAU,SAACzB,GAAD,OAASN,EAAWM,EAAM0B,OAAOH,UACjI,cAACI,EAAA,EAAD,CAAaC,KAAK,SAAUC,QAAS9B,EAAY+B,UAAajD,EAA9D,SACA,cAAC,IAAD,CAAUL,UAAU,gBAQrB,cAAC,IAAD,UAECmB,EAAMqB,KAAI,SAAA1C,GACR,OACE,cAAC,EAAD,CAAgCA,UAAWA,EAAUO,QAASN,SAAUsB,GAAtDvB,EAAU6C,aCrElCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4eabb00e.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport \"../App.css\"\r\n\r\nconst CardMessage = forwardRef(({myMessage,username},ref) => {\r\n    return (\r\n      <div ref={ref} className=\"parent\">\r\n       <Card className={username===myMessage.username ? \"isUser\" : \"isNotUser\"}>\r\n        <CardContent>\r\n          <Typography className=\"text\" gutterBottom>\r\n            {!(username===myMessage.username) && `${myMessage.username} :`}  {myMessage.message} \r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      </div>\r\n      \r\n    )\r\n})\r\n\r\nexport default CardMessage\r\n","// Import the functions you need from the SDKs you need\r\nimport firebase from 'firebase'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAP5LDiJo4XNCDTZH31rdrBI3RVclzj-dw\",\r\n  authDomain: \"react-messenger-clone-eea1b.firebaseapp.com\",\r\n  projectId: \"react-messenger-clone-eea1b\",\r\n  storageBucket: \"react-messenger-clone-eea1b.appspot.com\",\r\n  messagingSenderId: \"30143874264\",\r\n  appId: \"1:30143874264:web:f4da3ac573a778ac39c3ad\"\r\n});\r\n\r\n// Initialize Firebase\r\nconst db = firebaseApp.firestore();\r\nexport {db};","import { FormControl,InputLabel,Input} from '@mui/material';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport {React,useState,useEffect} from 'react'\nimport CardMessage from './components/CardMessage'\nimport {db} from './firebase'\nimport firebase from 'firebase'\nimport FlipMove from 'react-flip-move';\nimport { IconButton } from '@mui/material';\nfunction App() {\n const [message,setMessage] = useState('');\n const [convo,setConvo] = useState([]);\n const [userData,setUserData] = useState('');\n\n\n\n  const updateChat = async (event)=>{\n  event.preventDefault();\n  setConvo([...convo,{message,username: userData}]);\n  console.log(convo);\n  setMessage('');\n  db.collection('messages').add({\n    message ,\n    username : userData ,\n    timestamp : firebase.firestore.FieldValue.serverTimestamp()\n  })\n}\n\n\nuseEffect(()=>{\n  const username = prompt(\"Enter your username\");\n  setUserData(username);\n db.collection('messages')\n .orderBy('timestamp','desc')\n .onSnapshot(snapshot => {\n setConvo(snapshot.docs.map(doc=>{\n   return {\n    message : doc.data(),\n    id : doc.id\n   }\n  }))\n })\n},[])\n  return (\n    <>\n    <div id=\"background-wrap\">\n    <div class=\"bubble x1\"></div>\n    <div class=\"bubble x2\"></div>\n    <div class=\"bubble x3\"></div>\n    <div class=\"bubble x4\"></div>\n    <div class=\"bubble x5\"></div>\n    <div class=\"bubble x6\"></div>\n    <div class=\"bubble x7\"></div>\n    <div class=\"bubble x8\"></div>\n    <div class=\"bubble x9\"></div>\n    <div class=\"bubble x10\"></div>\n   </div>\n    <form className=\"form-submit\">\n  <FormControl className=\"form-control\">\n  <Input className=\"input\" value={message} placeholder=\"say something to the world....\" onChange={(event)=>setMessage(event.target.value)}/>\n  <IconButton  type=\"submit\"  onClick={updateChat} disabled = {!message}>\n  <SendIcon className=\"send\" />\n</IconButton>\n\n {/* <Button type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}  onClick={updateChat} disabled = {!message}>\n  Send\n </Button>   */}\n</FormControl>\n  </form>\n <FlipMove>\n{\n  convo.map(myMessage=>{\n    return(\n      <CardMessage key={myMessage.id} myMessage={myMessage.message} username={userData}/>\n    )\n  })\n}\n</FlipMove>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}